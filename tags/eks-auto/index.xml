<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EKS Auto on Vijay Kodam</title>
    <link>https://vijay.eu/tags/eks-auto/</link>
    <description>Recent content in EKS Auto on Vijay Kodam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Dec 2024 23:13:15 +0530</lastBuildDate>
    
	<atom:link href="https://vijay.eu/tags/eks-auto/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>First Impressions of EKS Auto Mode ‚Äì A Game Changer!</title>
      <link>https://vijay.eu/posts/eks-auto-first-impressions/</link>
      <pubDate>Mon, 09 Dec 2024 23:13:15 +0530</pubDate>
      
      <guid>https://vijay.eu/posts/eks-auto-first-impressions/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/aws-eks-pic.png&#34; alt=&#34;Kubernetes&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here are my thoughts after initial few days of using &lt;strong&gt;EKS Auto mode&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;AWS has truly raised the bar with EKS Auto Mode, a new feature announced at &lt;strong&gt;re:Invent 2024&lt;/strong&gt;. This innovation automates much of the undifferentiated heavy lifting, allowing customers to focus on what matters most: building great applications.&lt;/p&gt;
&lt;h2 id=&#34;-my-hands-on-experience&#34;&gt;üõ† My Hands-On Experience&lt;/h2&gt;
&lt;p&gt;I set up an EKS Auto Mode cluster from scratch and was pleasantly surprised by how much AWS now handles post-installation. You can read in &lt;a href=&#34;https://www.linkedin.com/pulse/how-create-eks-auto-mode-cluster-vijay-kumar-kodam-oqw4f/&#34;&gt;more detail about it here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let me break down what &lt;em&gt;Day 2 operations&lt;/em&gt; typically involve:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Managed Node Groups: Create managed node groups and wait for worker nodes to come up.&lt;/li&gt;
&lt;li&gt;EKS Node capabilities: Most of them were running as Kubernetes Daemonsets on worker nodes before. Now they run as system processes managed by AWS. This includes components such as service discovery, service load balancing, pod networking, block storage, and credential vending.&lt;/li&gt;
&lt;li&gt;Add-Ons Installation: Select and install versions for multiple EKS add-ons (latest, standard, or older). Like coredns, EBS CSI driver, CNI driver, EKS pod identity etc.&lt;/li&gt;
&lt;li&gt;Load Balancer Controller: Install the AWS Load Balancer Controller for ingress traffic handling.&lt;/li&gt;
&lt;li&gt;Cost Optimization: Install Karpenter to manage pod bin-packing, scale nodes dynamically, and select cost-efficient EC2 instances.&lt;/li&gt;
&lt;li&gt;OS Security patching: Address OS security vulnerabilities identified by AWS Security Hub.&lt;/li&gt;
&lt;li&gt;Cluster Upgrades: Over time, you need to upgrade Kubernetes control plane versions and meticulously plan worker node updates. This is a continuous process every 3-6 months.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, imagine all these tasks being automated by AWS. That‚Äôs EKS Auto Mode for you!&lt;/p&gt;
&lt;h2 id=&#34;-key-highlights-from-my-testing&#34;&gt;üí° Key Highlights from My Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No Idle Nodes: When I launched my first EKS Auto Mode cluster, there were no worker nodes running initially‚Äîjust built-in &amp;ldquo;general-purpose&amp;rdquo; and &amp;ldquo;system&amp;rdquo; node pools.&lt;/li&gt;
&lt;li&gt;Dynamic Scaling: After deploying my first application, Karpenter automatically spun up a worker node tailored to the app&amp;rsquo;s resource requirements.&lt;/li&gt;
&lt;li&gt;Cost Efficiency: Upon deleting the application, Karpenter scaled down the node, saving money by avoiding idle resources.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This level of automation simplifies cluster operations and significantly reduces costs.&lt;/p&gt;
&lt;h2 id=&#34;-pricing-update&#34;&gt;üîç Pricing Update&lt;/h2&gt;
&lt;p&gt;EKS Auto Mode introduces a pay-as-you-go control plane pricing model based on the number of EC2 worker nodes, a shift from the flat fee for the standard EKS control plane. While it‚Äôs a slight increase in cost, the time and effort saved make it a Win-Win for both AWS and customers. Find more about &lt;a href=&#34;https://aws.amazon.com/eks/pricing/&#34;&gt;EKS Auto mode pricing here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;-whats-next&#34;&gt;üé• What‚Äôs Next?&lt;/h2&gt;
&lt;p&gt;I‚Äôve &lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:7269311743338663936/&#34;&gt;created a demo video&lt;/a&gt; showcasing EKS Auto Mode in action. If you‚Äôre curious, I highly recommend giving this feature a try!&lt;/p&gt;
&lt;p&gt;For more insights on EKS, AWS, Kubernetes, and Cloud Architecture, follow me in &lt;a href=&#34;https://www.linkedin.com/in/vijaykodam/&#34;&gt;LinkedIn&lt;/a&gt; or check out my blog at &lt;a href=&#34;https://vijay.eu/posts&#34;&gt;https://vijay.eu/posts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let me know your thoughts on this exciting new feature! üëá&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
