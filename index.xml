<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vijay Kodam</title>
    <link>https://vijay.eu/</link>
    <description>Recent content on Vijay Kodam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Aug 2024 18:55:00 +0300</lastBuildDate>
    
	<atom:link href="https://vijay.eu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fitness Calculator</title>
      <link>https://vijay.eu/projects/fitness-calculator/</link>
      <pubDate>Fri, 09 Aug 2024 18:55:00 +0300</pubDate>
      
      <guid>https://vijay.eu/projects/fitness-calculator/</guid>
      <description>&lt;h2 id=&#34;2-km-walk-test-fitness-calculator&#34;&gt;2 Km Walk Test Fitness Calculator&lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
    
    &lt;div id=&#34;intro-text&#34;&gt;
        &lt;p&gt;
            The 2 Km Walk Test is a reliable way to estimate your maximal aerobic power (VO2max) and assess your fitness level.
        &lt;/p&gt;
        &lt;p&gt;
            To ensure accurate results, please follow these steps before filling in the details below:
        &lt;/p&gt;
        &lt;ol&gt;
            &lt;li&gt;&lt;strong&gt;Preparation:&lt;/strong&gt; Ensure you are in good health and fit to undertake the test. Wear comfortable clothing and shoes suitable for walking.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;Walk 2 Kilometers:&lt;/strong&gt; Find a flat, measured course (e.g., a track or a known distance on a path). Walk a total distance of 2 kilometers at a brisk, steady pace.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;Collect Your Data:&lt;/strong&gt; As soon as you finish the 2 km walk, immediately measure your heart rate (beats per minute) and note the total time taken to complete the walk (in minutes and seconds).&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;Enter Your Details:&lt;/strong&gt; Once you have completed the walk and collected the necessary data, fill in the information below to calculate your fitness index.&lt;/li&gt;
        &lt;/ol&gt;
    &lt;/div&gt;

    
    &lt;form id=&#34;fitness-form&#34;&gt;
        
        &lt;div&gt;
            &lt;label for=&#34;age&#34;&gt;Age (years):&lt;/label&gt;
            &lt;input type=&#34;number&#34; id=&#34;age&#34; name=&#34;age&#34; required&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&#34;gender&#34;&gt;Gender:&lt;/label&gt;
            &lt;select id=&#34;gender&#34; name=&#34;gender&#34; required&gt;
                &lt;option value=&#34;male&#34;&gt;Male&lt;/option&gt;
                &lt;option value=&#34;female&#34;&gt;Female&lt;/option&gt;
            &lt;/select&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&#34;weight&#34;&gt;Weight (kg):&lt;/label&gt;
            &lt;input type=&#34;number&#34; id=&#34;weight&#34; name=&#34;weight&#34; step=&#34;0.1&#34; required&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&#34;height&#34;&gt;Height (cm):&lt;/label&gt;
            &lt;input type=&#34;number&#34; id=&#34;height&#34; name=&#34;height&#34; required&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&#34;time-minutes&#34;&gt;Time to complete 2 km (minutes):&lt;/label&gt;
            &lt;input type=&#34;number&#34; id=&#34;time-minutes&#34; name=&#34;time-minutes&#34; required&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&#34;time-seconds&#34;&gt;Time to complete 2 km (seconds):&lt;/label&gt;
            &lt;input type=&#34;number&#34; id=&#34;time-seconds&#34; name=&#34;time-seconds&#34; required&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;label for=&#34;heart-rate&#34;&gt;Heart rate at the end of the walk (bpm):&lt;/label&gt;
            &lt;input type=&#34;number&#34; id=&#34;heart-rate&#34; name=&#34;heart-rate&#34; required&gt;
        &lt;/div&gt;
        &lt;button type=&#34;submit&#34;&gt;Calculate Fitness&lt;/button&gt;

        
        &lt;p class=&#34;disclaimer&#34;&gt;
            &lt;strong&gt;Disclaimer:&lt;/strong&gt; This tool is for informational purposes only and is not a substitute for professional medical advice, diagnosis, or treatment. Always consult your doctor or a qualified health professional before making any changes to your exercise routine or lifestyle.
        &lt;/p&gt;
    &lt;/form&gt;

    
    &lt;div id=&#34;results&#34; style=&#34;display:none;&#34;&gt;
        &lt;h3&gt;Your Fitness Results&lt;/h3&gt;
        &lt;p&gt;&lt;strong&gt;Maximal Aerobic Power (VO2max):&lt;/strong&gt; &lt;span id=&#34;vo2max-result&#34;&gt;&lt;/span&gt; ml·min⁻¹·kg⁻¹&lt;/p&gt;
        &lt;p&gt;&lt;strong&gt;BMI:&lt;/strong&gt; &lt;span id=&#34;bmi-result&#34;&gt;&lt;/span&gt;&lt;/p&gt;
        &lt;p&gt;&lt;strong&gt;Fitness Index:&lt;/strong&gt; &lt;span id=&#34;fitness-index-result&#34;&gt;&lt;/span&gt;&lt;/p&gt;
        &lt;p&gt;&lt;strong&gt;Fitness Class:&lt;/strong&gt; &lt;span id=&#34;fitness-class-result&#34;&gt;&lt;/span&gt;&lt;/p&gt;

        &lt;div id=&#34;calculation-details&#34; style=&#34;margin-top: 40px;&#34;&gt;
            
        &lt;/div&gt;

        &lt;button id=&#34;new-calculation&#34;&gt;New Calculation&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
    </item>
    
    <item>
      <title>Flag Game</title>
      <link>https://vijay.eu/projects/flag-game/</link>
      <pubDate>Thu, 08 Aug 2024 07:00:32 +0300</pubDate>
      
      <guid>https://vijay.eu/projects/flag-game/</guid>
      <description>&lt;div class=&#34;container&#34;&gt;
    &lt;div class=&#34;status&#34;&gt;
        &lt;div class=&#34;counter&#34;&gt;&lt;strong id=&#34;quiz-mini-counter&#34;&gt;1&lt;/strong&gt; / 10&lt;/div&gt;
        &lt;div class=&#34;correct&#34;&gt;&lt;strong id=&#34;quiz-mini-correct&#34;&gt;0&lt;/strong&gt; correctly&lt;/div&gt;
        &lt;div class=&#34;wrong&#34;&gt;&lt;strong id=&#34;quiz-mini-wrong&#34;&gt;0&lt;/strong&gt; wrong&lt;/div&gt;
    &lt;/div&gt;
    &lt;div id=&#34;quiz-mini-image&#34; class=&#34;image&#34;&gt;&lt;/div&gt;
    &lt;div id=&#34;quiz-mini-options&#34; class=&#34;options&#34;&gt;&lt;/div&gt;
    &lt;div id=&#34;quiz-mini-result&#34; class=&#34;result&#34; style=&#34;display: none;&#34;&gt;
        &lt;small&gt;
            &lt;strong&gt;&lt;span id=&#34;quiz-mini-result-correct&#34;&gt;Well done!&lt;/span&gt;&lt;/strong&gt;
            &lt;span id=&#34;quiz-mini-result-wrong&#34;&gt;False, it is &lt;strong id=&#34;quiz-mini-result-wrong-name&#34;&gt;*&lt;/strong&gt;&lt;/span&gt;
        &lt;/small&gt;
        &lt;button id=&#34;quiz-mini-refresh&#34; style=&#34;display: none;&#34;&gt;Restart Game&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
    </item>
    
    <item>
      <title>Paris 2024 Olympics</title>
      <link>https://vijay.eu/projects/medal-tally/</link>
      <pubDate>Thu, 01 Aug 2024 16:49:32 +0300</pubDate>
      
      <guid>https://vijay.eu/projects/medal-tally/</guid>
      <description>&lt;p&gt;Real time medal tally for Finland and India. Created on 01 Aug 2024.&lt;/p&gt;
&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;Medal Tally&lt;/title&gt;
    &lt;style&gt;
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
        }
        .medal-box {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin: 10px;
            padding: 20px;
            flex: 1 1 300px;
            max-width: 300px;
            box-sizing: border-box;
            text-align: center;
            width: 100%;
        }
        .medal-box h2 {
            margin-top: 0;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            word-wrap: break-word;
        }
        th {
            background-color: #f2f2f2;
            text-align: center;
        }
        td {
            text-align: center;
        }
        @media (min-width: 600px) {
            .container {
                justify-content: center;
            }
            .medal-box {
                flex: 1 1 calc(50% - 40px);
                max-width: calc(50% - 40px);
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Medal Tally&lt;/h1&gt;
    &lt;div class=&#34;container&#34;&gt;
        &lt;div class=&#34;medal-box&#34;&gt;
            &lt;h2&gt;Finland&lt;/h2&gt;
            &lt;table id=&#34;finland-medal-tally&#34;&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th&gt;Rank&lt;/th&gt;
                        &lt;th&gt;Gold&lt;/th&gt;
                        &lt;th&gt;Silver&lt;/th&gt;
                        &lt;th&gt;Bronze&lt;/th&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                    
                &lt;/tbody&gt;
            &lt;/table&gt;
        &lt;/div&gt;
        &lt;div class=&#34;medal-box&#34;&gt;
            &lt;h2&gt;India&lt;/h2&gt;
            &lt;table id=&#34;india-medal-tally&#34;&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th&gt;Rank&lt;/th&gt;
                        &lt;th&gt;Gold&lt;/th&gt;
                        &lt;th&gt;Silver&lt;/th&gt;
                        &lt;th&gt;Bronze&lt;/th&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                    
                &lt;/tbody&gt;
            &lt;/table&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;script src=&#34;https://vijay.eu/medal-tally/script.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;


</description>
    </item>
    
    <item>
      <title>Where Should I Deploy My K8s Cluster?</title>
      <link>https://vijay.eu/posts/deploy-k8s/</link>
      <pubDate>Sun, 17 May 2020 01:00:19 +0300</pubDate>
      
      <guid>https://vijay.eu/posts/deploy-k8s/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/K8s.png&#34; alt=&#34;Kubernetes&#34;&gt;&lt;/p&gt;
&lt;p&gt;This week there was an &lt;a href=&#34;https://www.redhat.com/en/blog/red-hat-and-aws-extend-collaboration-introducing-amazon-red-hat-openshift&#34;&gt;announcement&lt;/a&gt; about Amazon Red Hat Openshift. It is an enterprise Kubernetes (K8s) service on AWS jointly managed and supported by AWS and Red Hat. Upon reading more about the service, found out that Red Hat already has two more OpenShift services available on AWS. If you count AWS&amp;rsquo; own managed K8s service Amazon Elastic Kubernetes Service (EKS) then there are four different ways you can run a K8s cluster on top of AWS. I am sure there are many other companies providing similar managed K8s services on top of AWS.&lt;/p&gt;
&lt;p&gt;For a beginner starting to use K8s this is overwhelming. This brings us to the question: &lt;strong&gt;Where should I deploy my K8s cluster?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As always, the answer is: &lt;strong&gt;It Depends&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It depends&lt;/strong&gt; on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your team&amp;rsquo;s K8s expertise&lt;/li&gt;
&lt;li&gt;Your company&amp;rsquo;s budget&lt;/li&gt;
&lt;li&gt;Your data locality requirements&lt;/li&gt;
&lt;li&gt;Your preferred Cloud Vendor&lt;/li&gt;
&lt;li&gt;Your company&amp;rsquo;s already existing deals with Software vendors&lt;/li&gt;
&lt;li&gt;and many more.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You could run your K8s cluster in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On Premises&lt;/li&gt;
&lt;li&gt;Hybrid Cloud&lt;/li&gt;
&lt;li&gt;IaaS&lt;/li&gt;
&lt;li&gt;PaaS&lt;/li&gt;
&lt;li&gt;Others&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;on-premises&#34;&gt;On Premises&lt;/h3&gt;
&lt;p&gt;If you already own datacenters or if you have strict privacy/security requirements for making sure the data does not leave your premises then &lt;em&gt;On Premises&lt;/em&gt; solution is the way to go.&lt;/p&gt;
&lt;p&gt;Install host operating system on the bare metal servers and then install K8s on top of it. Kubeadm is one option. However, be aware that this is a bare bones solution. You have to build/integrate authentication, authorization, dashboard, security, networking plugins, service mesh, storage, the list goes on.&lt;/p&gt;
&lt;p&gt;You could choose to install Openshift or Rancher. These come fully loaded.&lt;/p&gt;
&lt;p&gt;On Premises solutions are usually the slowest ones  to complete the installation as you have to deal  with hardware. It takes time to order, ship, install and configure them.&lt;/p&gt;
&lt;h3 id=&#34;hybrid-cloud&#34;&gt;Hybrid Cloud&lt;/h3&gt;
&lt;p&gt;Amazon Outposts, Google Anthos and Azure Stack provide rack full of servers which you can install in your datacenter. These racks are connected to their Public cloud and you manage it just like VMs on public cloud.&lt;/p&gt;
&lt;p&gt;This option gives you the flexibility of cloud deployment with the advantage of not managing the hardware.&lt;/p&gt;
&lt;p&gt;Keep in mind that this is the most costliest option. Bill can run into millions easily.&lt;/p&gt;
&lt;p&gt;Once you have Outposts, Anthos or Azure Stack rack on premises, you can use their managed K8s solution on top of it. Google Anthos GKE is one such option.&lt;/p&gt;
&lt;p&gt;The timeline depends on the cloud provider and honestly I have no idea about it.&lt;/p&gt;
&lt;h3 id=&#34;iaas&#34;&gt;IaaS&lt;/h3&gt;
&lt;p&gt;If you need full control of the K8s cluster and you are a pro in managing K8s then this is the option to go.&lt;/p&gt;
&lt;p&gt;You install K8s on top of Amazon EC2 or Google Compute Engine or Azure Virtual Machine.&lt;/p&gt;
&lt;p&gt;Several K8s deployment tools like kops, kubespray or KRIB exist. You can also install Red Hat Openshift or Rancher on the virtual machines.&lt;/p&gt;
&lt;p&gt;Use this option only when you have experience running k8s clusters.&lt;/p&gt;
&lt;h3 id=&#34;paas&#34;&gt;PaaS&lt;/h3&gt;
&lt;p&gt;If all you wanted is a K8s cluster and don&amp;rsquo;t know or don&amp;rsquo;t want to know K8s cluster management then this option is for you.&lt;/p&gt;
&lt;p&gt;Managed K8s solutions like Google GKE, Amazon EKS, Amazon Red Hat Openshift, Azure AKS does fit the bill.&lt;/p&gt;
&lt;p&gt;You click a button and you get a cluster and the kubeconfig/credentials to the cluster.&lt;/p&gt;
&lt;p&gt;You might want to customize some options, enable logging, move the API server to private endpoint etc.&lt;/p&gt;
&lt;p&gt;Usually this is a good place to start for development clusters. Deploy the k8s cluster, tune it, test it, run your applications and then customize more.&lt;/p&gt;
&lt;p&gt;Since this is a managed solution, you will not have full control of the cluster. You have to use whatever version they support, don&amp;rsquo;t get access to the API server or etcd servers barring some flags.&lt;/p&gt;
&lt;h3 id=&#34;others&#34;&gt;Others&lt;/h3&gt;
&lt;p&gt;Minikube, kind, k3s are for developments purposes. These software are light weight and are designed to run on your laptop.&lt;/p&gt;
&lt;p&gt;These solutions can be used for learning about k8s, for local testing of your applications.&lt;/p&gt;
&lt;p&gt;K8s distributions like Red Hat Openshift or Rancher can be installed on bare metal, IaaS, and  PaaS. Usually this option is useful if you have more than one type of infrastructure and you want to use the same K8s distribution everywhere. You could build automation on top of it and deploy it any where you want.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this blog post I have tried to cover different ways you can deploy your kubernetes cluster. This list is not exhaustive and I might have missed some options.&lt;/p&gt;
&lt;p&gt;Kubernetes has become the industry standard for running containers and all the major public cloud providers have K8s services.&lt;/p&gt;
&lt;p&gt;Purpose of writing this blog post is to showcase the variety of K8s deployment options you have, be it on a bare metal server, or virtual machine or managed solution like this week&amp;rsquo;s announcement of Amazon Red Hat Openshift.&lt;/p&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments&lt;/h3&gt;
&lt;p&gt;Send your feedback by commenting on my tweet below.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Where should I deploy my K8s cluster?&lt;br&gt;My new blog post on this topic.&lt;a href=&#34;https://t.co/sflPzY3Rnt&#34;&gt;https://t.co/sflPzY3Rnt&lt;/a&gt;&lt;br&gt;&lt;br&gt;Do read it and give me feedback.&lt;/p&gt;&amp;mdash; Vijay Kodam (@vijaykodam) &lt;a href=&#34;https://twitter.com/vijaykodam/status/1261783876596350976?ref_src=twsrc%5Etfw&#34;&gt;May 16, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


</description>
    </item>
    
    <item>
      <title>How to login securely to your Amazon EC2 Instance?</title>
      <link>https://vijay.eu/posts/how-to-login-securely-to-amazon-ec2/</link>
      <pubDate>Tue, 12 May 2020 14:42:15 +0300</pubDate>
      
      <guid>https://vijay.eu/posts/how-to-login-securely-to-amazon-ec2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/secure-ec2.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Securing the Amazon EC2 instance is the first thing you have to think while creating it. This post specifically talks about how to secure SSH/RDP port on your EC2 Instances and how not to open port 22/3389 to the Internet (0.0.0.0/0).&lt;/p&gt;
&lt;p&gt;There are several ways to secure your EC2 instances in AWS. Will discuss some of the popular ones.&lt;/p&gt;
&lt;p&gt;When EC2 instance is running in Public subnet, disable password authentication and enable SSH keys based authentication. Secure your SSH port to allow traffic from specific subnet (Ex., 3.2.132.0/24) or your own IP address (Eg., 3.2.132.23/32) by setting security group rules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;a href=&#34;https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html&#34;&gt;*security group&lt;/a&gt;* acts as a virtual firewall for your instance to control inbound and outbound traffic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Problem with this method is that whenever your IP address or subnet changes you have to update your security group rules. Managing SSH keys is another task, which can get quite tricky when there are more than few EC2 instances. How to store the SSH keys safely? How to grant or revoke accesses to specific users?&lt;/p&gt;
&lt;p&gt;Another way is to use bastion host, run it in Public subnet and expose it to Internet using security group rules. Create your EC2 instances in a private subnet where there is no access from Internet and no one from outside can access it. Use security group rules to allow SSH traffic into your instance only from the bastion. This way your EC2 instance traffic is secured and only from bastion host you can access your EC2 instance.&lt;/p&gt;
&lt;p&gt;However, the same problem exists as before. How will you secure your SSH/RDP port on the bastion host. You will still have to manage the SSH keys to your bastion host and open inbound ports on the instance.&lt;/p&gt;
&lt;h2 id=&#34;aws-systems-manager-session-manager&#34;&gt;AWS Systems Manager Session Manager&lt;/h2&gt;
&lt;p&gt;Session Manager is part of AWS Systems Manager service. It gives you a browser-based CLI window to access your Windows and Linux EC2 instances without opening inbound SSH/RDP port. No need to create a bastion host. No need to manage SSH keys. Access can be granted or revoked using AWS IAM.&lt;/p&gt;
&lt;p&gt;AWS Systems Manager uses SSM agent running on the EC2 instance to manage the login and other tasks.&lt;/p&gt;
&lt;p&gt;SSM Agent is preinstalled, by default, on the following Amazon Machine Images (AMIs):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows Server 2008-2012 R2 AMIs published in November 2016 or later&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows Server 2016 and 2019&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon Linux&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon Linux 2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu Server 16.04&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu Server 18.04&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon ECS-Optimized&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You need to create relevant IAM permissions, install or enable SSM agent on the EC2 instances. Once you do it you can either acces your instance from AWS Console or AWS CLI.&lt;/p&gt;
&lt;p&gt;For detailed instructions, refer to &lt;a href=&#34;https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started.html&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;AWS Systems Manager Sessions Manager lets you manage your entire fleet of EC2 instances, audit the access, grant or revoke access for each instance.&lt;/p&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;
&lt;p&gt;Beware of pressing CTRL-W if you are used to it on the bash shell. It will close your browser window. Change the keyboard shortcuts to update the shortcut.&lt;/p&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments&lt;/h3&gt;
&lt;p&gt;Send your feedback or comments on my tweet below:
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;How to login securely to Amazon EC2 without opening SSH port to 0.0.0.0/0.&lt;a href=&#34;https://t.co/iAPvnoawwN&#34;&gt;https://t.co/iAPvnoawwN&lt;/a&gt;&lt;br&gt;&lt;br&gt;This tweet is used for allowing readers to comment on my blogpost. &lt;br&gt;Since it is hosted as static pages using Hugo thought this is a good way to include commenting on my blogpost.&lt;/p&gt;&amp;mdash; Vijay Kodam (@vijaykodam) &lt;a href=&#34;https://twitter.com/vijaykodam/status/1260837110812155904?ref_src=twsrc%5Etfw&#34;&gt;May 14, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ambassador API GW and Keycloak integration</title>
      <link>https://vijay.eu/posts/ambassador-keycloak-integration/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://vijay.eu/posts/ambassador-keycloak-integration/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/cloud.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.getambassador.io/&#34;&gt;Ambassador API GW&lt;/a&gt; is an open source, Kubernetes-Native microservices API Gateway built on the Envoy Proxy.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt; is an open source identity and access management solution. Keycloak supports OpenID Connect, SAML, OAuth2 and LDAP.&lt;/p&gt;
&lt;p&gt;Ambassador supports authenticating incoming requests. When configured, Ambassador will check with a third party authentication service prior to routing an incoming request. An AuthService manifest configures Ambassador to use an external service to check authentication and authorization for incoming requests. Each incoming request is authenticated before routing to its destination.&lt;/p&gt;
&lt;p&gt;In this blog we will be using Keycloak as our IAM solution and integrating it with Ambassador API GW. After integrating Keycloak with Ambassador, incoming API requests will be redirected to Keycloak login page for authentication before allowing access to those APIs.&lt;/p&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Ambassador API GW is deployed and listening for API requests. Follow the &lt;a href=&#34;https://www.getambassador.io/user-guide/getting-started&#34;&gt;official instructions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;httpbin example application is configured for the URL: &lt;code&gt;http://&amp;lt;Ambassador URL&amp;gt;/httpbin&lt;/code&gt;
You can follow the instructions mentioned &lt;a href=&#34;https://www.getambassador.io/user-guide/getting-started/#3-creating-your-first-route&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Make sure &lt;code&gt;http://&amp;lt;Ambassador URL&amp;gt;/httpbin&lt;/code&gt; is routed through Ambassador API GW and it should open &lt;code&gt;httpbin.org&lt;/code&gt; website.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In some of the commands below, you need to substitute relevant IP or URL for Keycloak and Ambassador. You will find them in this notation: &lt;code&gt;&amp;lt;Ambassador IP-or-URL&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Your-Keycloak-IP-or-URL&amp;gt;&lt;/code&gt;.       Similarly there are other variables in &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; which you need to substitute before running those commands.&lt;/p&gt;
&lt;h2 id=&#34;set-up-keycloak&#34;&gt;Set up Keycloak&lt;/h2&gt;
&lt;p&gt;Use your existing keycloak setup if you already have. If not you can start one quicky using below instructions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please note that below keycloak setup is not secure and is used only for testing the Ambassador-Keycloak integration. Do not use this in production. Use it at your own risk.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For testing purposes docker version of keycloak will be used for this demo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -e KEYCLOAK_USER=&amp;lt;add-your-keycloak-user&amp;gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            -e KEYCLOAK_PASSWORD=&amp;lt;keycloak-password&amp;gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                  -p 0.0.0.0:80:8080 \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                -itd --name keycloak \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                      jboss/keycloak
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Above command will start keycloak on your Linux machine. It will set admin username, password and binds keycloak to port 80. This setup uses keycloak&amp;rsquo;s default H2 DB, which should not be used in production. Note your IP address.&lt;/p&gt;
&lt;p&gt;Login to Keycloak by visiting &lt;code&gt;http://&amp;lt;your-ip&amp;gt;&lt;/code&gt; in your browser. Use the username and password supplied in the docker run command to login to Keycloak.&lt;/p&gt;
&lt;p&gt;Use the existing &amp;ldquo;master&amp;rdquo; realm. Create a client and a user for our testing purposes.
Click on &lt;code&gt;Clients -&amp;gt; Create&lt;/code&gt;. Create button is on the right side of the page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture6.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;Client ID&lt;/code&gt; as &lt;code&gt;test&lt;/code&gt;. Select &amp;ldquo;&lt;code&gt;Client Protocol&lt;/code&gt;&amp;rdquo; as &amp;ldquo;openid-connect&amp;rdquo;. You can leave other fields empty. Click Save.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture1.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;After saving, a new window will open with more details. Turn On &lt;code&gt;Authorization Enabled&lt;/code&gt; option. It will automatically turn On &lt;code&gt;Service Accounts Enabled&lt;/code&gt; option. Leave it like that.&lt;/p&gt;
&lt;p&gt;Fill &lt;code&gt;Valid Redirect URIs&lt;/code&gt; with &lt;code&gt;http://&amp;lt;Ambassador URL&amp;gt;/*&lt;/code&gt;. Click Save.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture2.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture8.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;On the same page, go to &lt;code&gt;Credentials&lt;/code&gt; tab as shown below. Note the secret which is needed when creating &amp;ldquo;ambassador-auth-client-secret&amp;rdquo; in the next section. Use it wherever &lt;code&gt;&amp;lt;YOUR_OIDC_CLIENT_SECRET&amp;gt;&lt;/code&gt; is mentioned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture4.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Click Users section on the keycloak page, to create users. Add username, email and select email verified. Click Save.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture9.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the same page, go to Credentials tab.  Set the new password, and turn Temporary to Off.&lt;br&gt;
Click Reset Password.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture10.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When dialog window opens click Change Password.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture11.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please note that this is done only for testing ambassador-keycloak integration. 
Please do not do this in production or in any setup. Follow these instructions at your own risk.&lt;/p&gt;
&lt;p&gt;Now go back and click Users section in Keycloak. In the Users page, click &amp;ldquo;View all Users&amp;rdquo; and you should see the newly created user.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vijay.eu/images/Capture12.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;setup-oidc-auth-integration-with-keycloak&#34;&gt;Setup OIDC Auth integration with Keycloak&lt;/h2&gt;
&lt;p&gt;Thanks to Antti Myyra for developing Ambassador-Auth-OIDC, which will be used to integrate Keycloak with Ambassador API GW.&lt;/p&gt;
&lt;p&gt;Run below commands to clone ambassador-auth-oidc. Below you can choose to run it either in docker or in k8s. Don&amp;rsquo;t run both.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/ajmyyra/ambassador-auth-oidc.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ambassador-auth-oidc/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;running-ambassador-auth-in-docker&#34;&gt;Running ambassador auth In Docker&lt;/h3&gt;
&lt;p&gt;Use these instructions if your Ambassador API gateway is running as docker container and not in k8s.&lt;/p&gt;
&lt;p&gt;Above setup is running keycloak as docker container and listening on port 80. Below ambassador-auth-oidc docker container will listen on port 8080.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -p 0.0.0.0:8080:8080 \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -e OIDC_PROVIDER=&amp;#34;http://&amp;lt;Your-Keycloak-IP-or-URL&amp;gt;/auth/realms/master&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -e SELF_URL=&amp;#34;http://&amp;lt;Ambassador IP-or-URL&amp;gt;:8080&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -e OIDC_SCOPES=&amp;#34;profile email&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -e CLIENT_ID=&amp;#34;test&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -e CLIENT_SECRET=&amp;#34;&amp;lt;YOUR_OIDC_CLIENT_SECRET&amp;gt;&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ajmyyra/ambassador-auth-oidc:1.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;running-ambassador-auth-in-kubernetes&#34;&gt;Running Ambassador Auth in Kubernetes&lt;/h3&gt;
&lt;p&gt;Use this setup if you are already running Ambassador API GW in K8s.
Make sure Ambassador API GW is up and running before creating secrets.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic ambassador-auth-jwt-key --from-literal=jwt-key=$(openssl rand -base64 64|tr -d &amp;#39;\n &amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic ambassador-auth-redis-password --from-literal=redis-password=$(openssl rand -base64 20)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic ambassador-auth-oidc-provider --from-literal=oidc-provider=&amp;#34;http://&amp;lt;Your-Keycloak-IP-or-URL&amp;gt;/auth/realms/master&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic ambassador-auth-self-url --from-literal=self-url=&amp;#34;http://&amp;lt;Ambassador IP-or-URL&amp;gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic ambassador-auth-client-id --from-literal=client-id=&amp;#34;test&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic ambassador-auth-client-secret --from-literal=client-secret=&amp;lt;YOUR_OIDC_CLIENT_SECRET&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get secrets # To confirm they&amp;#39;ve been created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run below commands in the root directory of ambassador-auth-oidc. This will start the ambassador-auth-oidc container on K8s.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ambassador-auth-oidc/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp misc/auth-deployment.yaml.example auth-deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp misc/auth-service.yaml.example auth-service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create -f auth-deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create -f auth-service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure ambassador-auth-oidc is up and running. Also check the logs to make sure everything is alright.&lt;/p&gt;
&lt;p&gt;Now go to &lt;code&gt;http://&amp;lt;Ambassador IP-or-URL&amp;gt;/httpbin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It should automatically redirect you to Keycloak page for logging in.
Enter your &amp;ldquo;test&amp;rdquo; user credentials. After successful login it should automatically redirect you to &lt;code&gt;http://&amp;lt;Ambassador IP-or-URL&amp;gt;/httpbin&lt;/code&gt; page.&lt;/p&gt;
&lt;p&gt;We have successfully integrated Keycloak with Ambassador API GW and tested API Authentication.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vijay Kodam</title>
      <link>https://vijay.eu/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vijay.eu/about/</guid>
      <description>&lt;p&gt;This is &lt;strong&gt;Vijay Kodam&lt;/strong&gt;&amp;rsquo;s personal blog.
He is currently working as a Principal Engineer Cloud Technology at Nokia, Finland.&lt;/p&gt;
&lt;p&gt;He started developing software for 2G CDMA in his first job, then moved onto 3G 1x-EVDO RNC development.
After that he wrote code to deploy 4G/5G Virtual Network Functions on Telco Cloud using Openstack, Mesos and Docker.&lt;/p&gt;
&lt;p&gt;Currently he is leading the Private 5G platform project which he built from scratch using AWS services, Kubernetes, Cassandra, Grafana, Prometheus, Docker containers, and Harbor. He dons several hats as a Cloud Architect, SRE, DevOps and system architect.&lt;/p&gt;
&lt;p&gt;When he is not working in Cloud computing, he gets his hands dirty with AI/LLM hobby projects which are listed in projects section of this blog.&lt;/p&gt;
&lt;p&gt;The views expressed in this blog are entirely his personal views and not his employer&amp;rsquo;s.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
